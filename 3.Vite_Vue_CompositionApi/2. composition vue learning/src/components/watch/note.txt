# watch is the builtin api/function of vue that is used to watch one or more reactive data sources and invoke callback function when the source change.
# syntax: watch(data_source,callback,options)

--------------------------------------------------------------------------------------------------------------------------------------------

# first parameter: reactive data sources
    1. reactive data properties ==> ref, reactive_object
    2. computed_property
    3. props
    4. getter function,
    5. array of multiple reactive data sourecs.
    6. Deep Watching,
    7. Watchers with Immediate Callback

# second parameter: callback
    (newValue, prevValue, cleanup_callback) => {}

# third parameter: options
    - immediate
    - deep
    - flush
    - onTrack
    - onTrigger

# watcher inside watcher.
# watch reactive object state.

--------------------------------------------------------------------------------------------------------------------------------------------

Q. what are the options watchers can watch

In Vue, watchers can be used to watch changes in various types of reactive expressions. Here are the different options that watchers can watch:

Data properties: Watchers can be set up to observe changes in data properties defined within the component's data option or the setup function in the Composition API.

Computed properties: Watchers can watch changes in computed properties. When the dependencies of a computed property change, the watcher will be triggered.

Props: In Vue 2's Options API, watchers can be used to observe changes in props passed to the component. This allows you to react to prop changes and perform additional logic when the prop values change.

Reactive objects: Watchers can be used to observe changes in properties of reactive objects created using reactive or ref in the Composition API or Vue 2's Options API, respectively. When any property within the reactive object changes, the watcher will be triggered.

Refs: Watchers can watch changes in values accessed through ref or toRef in the Composition API. By using the .value property of the ref, you can watch for changes in the underlying value.

Deep watchers: Vue allows you to set up deep watchers using the deep option. This enables watching nested properties within objects or arrays. Deep watchers will trigger when any nested property or element within the watched expression changes.

By using watchers, you can react to changes in these reactive expressions and perform custom logic, update other data, make API calls, or trigger side effects based on the changes. Watchers provide a flexible and powerful way to observe and respond to changes in your Vue components.

--------------------------------------------------------------------------------------------------------------------------------------------

Q. So in composition api we have to write watch mutiple time for eavry watcher. Is there any other way?
