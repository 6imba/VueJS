# without ref:
    <script setup>
        let fname = "Amir";
        let lname = "Shrestha";
        const fullname = (role) => {
            return fname + ' ' + lname + 'Role: ' + role;
        }
    </script>
    <template>
        <h1>Fullname: {{ fullname() }}</h1>
    </template>

# with ref:
    <script setup>
        import { ref } from 'vue';
        let fname = ref("Amir");
        let lname = ref("Shrestha");
        const fullname = (role) => {
            return fname.value + ' ' + lname.value + 'Role: ' + role;
        }
    </script>
    <template>
        <h1>Fullname: {{ fullname() }}</h1>
    </template>

# Computed property: default readable.
    <script setup>
        import { ref, computed } from 'vue';
        let fname = ref("Amir");
        let lname = ref("Shrestha");
        const fullname = computed((role) => {
            return fname.value + ' ' + lname.value + 'Role: ' + role;
        })
    </script>
    <template>
        <h1>Fullname: {{ fullname }}</h1>
    </template>

# Writeable computed property:
    <script setup>
        import { ref, computed } from 'vue';
        let fname = ref("Amir");
        let lname = ref("Shrestha");
        const fullname = computed({
            get(){
                return fname.value + ' ' + lname.value + 'Role: ';
            }
            set(newValue){
                [fname.value, lname.value] = newValue.split('');
            }
        })
        setTimeout(()=>{
            fullname.value = 'Ram Bahadur';
        }, 2000)
    </script>
    <template>
        <h1>Fullname: {{ fullname }}</h1>
    </template>